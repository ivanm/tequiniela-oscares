[{"/home/ivan/projects/fun/oscarin-frontend/src/main.tsx":"1","/home/ivan/projects/fun/oscarin-frontend/src/App.tsx":"2","/home/ivan/projects/fun/oscarin-frontend/src/theme.ts":"3","/home/ivan/projects/fun/oscarin-frontend/src/nominees.ts":"4","/home/ivan/projects/fun/oscarin-frontend/src/NominationCards.tsx":"5","/home/ivan/projects/fun/oscarin-frontend/src/cards/BigCard.tsx":"6","/home/ivan/projects/fun/oscarin-frontend/src/cards/SmallCard.tsx":"7","/home/ivan/projects/fun/oscarin-frontend/src/cards/MiniCard.tsx":"8"},{"size":350,"mtime":1675986245171,"results":"9","hashOfConfig":"10"},{"size":9583,"mtime":1677016270567,"results":"11","hashOfConfig":"10"},{"size":326,"mtime":1676003151752,"results":"12","hashOfConfig":"10"},{"size":10251,"mtime":1676420316114,"results":"13","hashOfConfig":"10"},{"size":2369,"mtime":1677015757336,"results":"14","hashOfConfig":"10"},{"size":1453,"mtime":1677015901597,"results":"15","hashOfConfig":"10"},{"size":1755,"mtime":1676420342128,"results":"16","hashOfConfig":"10"},{"size":1330,"mtime":1676419472851,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"33wy58",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ivan/projects/fun/oscarin-frontend/src/main.tsx",[],[],[],"/home/ivan/projects/fun/oscarin-frontend/src/App.tsx",["44","45"],[],"/home/ivan/projects/fun/oscarin-frontend/src/theme.ts",[],[],"/home/ivan/projects/fun/oscarin-frontend/src/nominees.ts",[],[],"/home/ivan/projects/fun/oscarin-frontend/src/NominationCards.tsx",["46","47"],[],"import {\n  Box,\n  Wrap,\n  WrapItem,\n  Flex,\n  Image,\n  Heading,\n  Grid,\n  GridItem,\n} from \"@chakra-ui/react\";\nimport SmallCard from \"./cards/SmallCard\";\nimport BigCard from \"./cards/BigCard\";\nimport MiniCard from \"./cards/MiniCard\";\nimport type { Nomination } from \"./nominees\";\n\nexport interface NominationCardsProps {\n  containerDirection: \"row\" | \"column\";\n  cardsDirection: \"row\" | \"column\";\n  nominations: Nomination[];\n  size: \"big\" | \"small\" | \"mini\";\n  title: string;\n  mt?: number | string;\n  mr?: number | string;\n  mb?: number | string;\n  ml?: number | string;\n  pt?: number | string;\n  pr?: number | string;\n  pb?: number | string;\n  pl?: number | string;\n}\nconst NominationCards = ({\n  containerDirection,\n  cardsDirection,\n  nominations,\n  size,\n  title,\n  mt,\n  mr,\n  mb,\n  ml,\n  pt,\n  pr,\n  pb,\n  pl,\n}: NominationCardsProps) => (\n  <Flex direction={containerDirection}>\n    <Flex mt={mt} mr={mr} mb={mb} ml={ml} pt={pt} pr={pr} pb={pb} pl={pl}>\n      <Image src=\"/figure.svg\" alt=\"Oscar Figure\" />\n      <Flex align=\"center\" minHeight=\"45px\">\n        <Heading\n          fontWeight=\"extrabold\"\n          as=\"h1\"\n          fontSize={{\n            base: size !== \"mini\" ? \"20px\" : \"15px\",\n            lg: size !== \"mini\" ? \"24px\" : \"17px\",\n          }}\n          mr={2}\n          maxWidth={{ base: 170, lg: 320 }}\n        >\n          {title}\n        </Heading>\n      </Flex>\n    </Flex>\n    <Grid\n      templateColumns={{\n        base: \"repeat(auto-fit, minmax(100px, 1fr))\",\n        sm: \"repeat(auto-fit, minmax(200px, 1fr))\",\n        lg: \"repeat(auto-fit, minmax(200px, 1fr))\",\n        xl: \"repeat(auto-fit, minmax(220px, 1fr))\",\n      }}\n      gap={3}\n    >\n      {nominations.map(({ imgSrc, movie, name }, i) => (\n        <GridItem key={i}>\n          <Box p={2}>\n            {size === \"small\" ? (\n              <SmallCard\n                imgSrc={imgSrc}\n                title={movie}\n                name={name}\n                status=\"normal\"\n              />\n            ) : (\n              \"\"\n            )}\n            {size === \"big\" ? (\n              <BigCard imgSrc={imgSrc} title={movie} status=\"normal\" />\n            ) : (\n              \"\"\n            )}\n            {size === \"mini\" ? <MiniCard title={movie} status=\"normal\" /> : \"\"}\n          </Box>\n        </GridItem>\n      ))}\n    </Grid>\n  </Flex>\n);\n\nexport default NominationCards;\n","/home/ivan/projects/fun/oscarin-frontend/src/cards/BigCard.tsx",[],[],"/home/ivan/projects/fun/oscarin-frontend/src/cards/SmallCard.tsx",[],[],"/home/ivan/projects/fun/oscarin-frontend/src/cards/MiniCard.tsx",[],[],{"ruleId":"48","severity":1,"message":"49","line":1,"column":10,"nodeType":"50","messageId":"51","endLine":1,"endColumn":18},{"ruleId":"48","severity":1,"message":"52","line":1,"column":20,"nodeType":"50","messageId":"51","endLine":1,"endColumn":29},{"ruleId":"48","severity":1,"message":"53","line":3,"column":3,"nodeType":"50","messageId":"51","endLine":3,"endColumn":7},{"ruleId":"48","severity":1,"message":"54","line":4,"column":3,"nodeType":"50","messageId":"51","endLine":4,"endColumn":11},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Wrap' is defined but never used.","'WrapItem' is defined but never used."]